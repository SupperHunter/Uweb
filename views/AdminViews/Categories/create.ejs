<h1>Thêm Danh Mục Mới</h1>

<style>
  .ck.ck-editor__main>.ck-editor__editable {
    height: 200px;
  }
</style>

<form id="createCategoryForm" action="/admin/categoriesnew" method="POST" enctype="multipart/form-data">
  <div class="mb-3">
    <label for="name" class="form-label">Tên Danh Mục</label>
    <input type="hidden" name="authToken" id="authToken">
    <input type="text" class="form-control" id="name" name="name" required>
  </div>

  <div class="mb-3">
    <label for="Description" class="form-label">Mô Tả</label>
    <div id="editor"></div>
    <input type="hidden" id="Description" name="Description" required>
  </div>
  <div class="mb-3">
    <label for="images" class="form-label">Hình Ảnh</label>
    <input type="file" class="form-control" id="images" onchange="encodeImageFilesAsURLs(this)" name="images" multiple required>
    <small class="form-text text-muted">Tải lên nhiều hình ảnh bằng cách giữ phím Ctrl (Windows) hoặc Command (Mac)
      trong khi chọn tệp.</small>
  </div>
  <button type="submit" class="btn btn-primary">Gửi</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/classic/ckeditor.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script>

  const token = localStorage.getItem('authToken');
  if (token) {
    // Gán token vào input ẩn
    document.getElementById('authToken').value = token;
  }
  let editor;
  ClassicEditor
    .create(document.querySelector('#editor'), {
      minHeight: '300px',
    })
    .then(newEditor => {
      editor = newEditor;
    })
    .catch(error => {
      console.error(error);
    });

  document.getElementById('createCategoryForm').addEventListener('submit', function (e) {
    e.preventDefault(); // Ngăn chặn gửi biểu mẫu mặc định

    Swal.fire({
      title: 'Bạn có chắc chắn không?',
      text: 'Bạn có chắc chắn muốn thêm danh mục này?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Có, lưu lại!',
      cancelButtonText: 'Không, hủy!',
    }).then((result) => {
      if (result.isConfirmed) {
        document.getElementById('Description').value = editor.getData();
        this.submit(); // Gửi biểu mẫu
      }
    });

  });


  function encodeImageFilesAsURLs(element){
    const files = element.files; // Lấy danh sách các tệp được chọn
    const validImageTypes = ['image/gif', 'image/jpeg', 'image/png']; // Các định dạng ảnh hợp lệ
    Array.from(files).forEach(file => {
        const fileType = file.type;

        if (!validImageTypes.includes(fileType)) {
            console.warn(`Tệp ${file.name} không phải là định dạng ảnh hợp lệ.`);
            return;
        }

        const reader = new FileReader();
        reader.onloadend = function() {
            console.log(`Kết quả Base64 của ${file.name}:`, reader.result);
        }
        reader.readAsDataURL(file);
    });
  }
</script>